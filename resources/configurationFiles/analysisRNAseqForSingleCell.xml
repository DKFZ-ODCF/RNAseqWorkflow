<!--
  ~ Copyright (c) 2017 eilslabs.
  ~
  ~ Distributed under the MIT License (license terms are at https://www.github.com/eilslabs/Roddy/LICENSE.txt).
  -->

<configuration name='RNAseqSingleCellAnalysis' description='paired end RNA seq analysis using STAR, feature counts, kallisto, arriba, RNAseQC and QualiMap2'
               configurationType='analysis' class='de.dkfz.roddy.core.Analysis'
               workflowClass='de.dkfz.b080.co.rnaseqworkflow.RNAseqWorkflowForSingleCell'
               runtimeServiceClass='de.dkfz.b080.co.common.COProjectsRuntimeService'
               listOfUsedTools=""
               imports="RNAseqAnalysis"
               usedToolFolders="rnaseqworkflow,tools"
               cleanupScript="cleanupScript">

    <configurationvalues>
        <!-- ## Single cell analysis -->
        <cvalue name="rawBarcodeFilename" value="welllist.txt" type="string"/>
        <cvalue name='demultiplexOutputDirectory' value='demultiplex' type='string'/>
        <cvalue name='singleCellSequencingSystem' value='wafergen' type='string' />
        <cvalue name='numProcessingJobs' value='20' type='string' />
        <cvalue name='RUN_LIBRARY_QC' value='true' type='boolean'/>
        <cvalue name='RUN_DEMULTIPLEXING' value='true' type='string'/>
        <cvalue name='LIBRARY_QC_DIR' value='${outputAnalysisBaseDirectory}/library_qc' type='string'/>

        <cvalue name="runSingleCellWorkflow" value="true" type="boolean" />
        <cvalue name="useSingleEndProcessing" value="false" type="boolean" />
        <cvalue name="chunkSize" value="128" type="integer" />

        <!-- <cvalue name='JE_VERSION' value='1.0' type='string'/> -->
        <cvalue name='JEMULTIPLEXER_VERSION' value='1.0.6' type='string'/>
        <cvalue name='PYPY_VERSION' value='5.8.0' type='string'/>

        <cvalue name="workflowEnvironmentScript" value="workflowEnvironment_tbiCluster_singleCell" type="string"/>

        <cvalue name="JE_PARAMS_WAFERGEN" value="BARCODE_READ_POS=READ_1 BARCODE_FOR_SAMPLE_MATCHING=BOTH REDUNDANT_BARCODES=true STRICT=false MAX_MISMATCHES=1 MIN_MISMATCH_DELTA=1 MIN_BASE_QUALITY=10 XTRIMLEN=0 ZTRIMLEN=0 CLIP_BARCODE=false ADD_BARCODE_TO_HEADER=false QUALITY_FORMAT=Standard KEEP_UNASSIGNED_READ=true FORCE=true GZIP_OUTPUTS=true WRITER_FACTORY_USE_ASYNC_IO=true STATS_ONLY=false VERBOSITY=INFO QUIET=false VALIDATION_STRINGENCY=STRICT COMPRESSION_LEVEL=5 MAX_RECORDS_IN_RAM=500000 CREATE_INDEX=false CREATE_MD5_FILE=false"
                type="string"/>

        <!--<cvalue name='SCRATCH' value='${outputAnalysisBaseDirectory}/temp_${SAMPLE}_${CHUNK_INDEX}' type='string'/>-->
        <cvalue name='STAR_PREFIX' value='${SAMPLE}_${pid}_${CHUNK_INDEX}_merged' type='string'/>
        <cvalue name='STAR_TMPDIR' value='${RODDY_SCRATCH}/${SAMPLE}_${pid}_${CHUNK_INDEX}_STAR'/>
        <cvalue name='STAR_NOTSORTED_BAM' value='${STAR_PREFIX}.Aligned.out.bam' type='string'/>
        <cvalue name='STAR_SORTED_BAM' value='${STAR_PREFIX}.Aligned.sortedByCoord.out.bam' type='string'/>
        <cvalue name='STAR_SORTED_MKDUP_BAM' value='${STAR_PREFIX}.mdup.bam' type='string'/>
        <cvalue name='UMI_DEDUP_BAM' value='${STAR_PREFIX}.UMIdedup.bam' type='string'/>
        <cvalue name='STAR_PARAMS_BASIC'
                value="--sjdbOverhang ${STAR_INDEX_OVERHANG} --runThreadN ${CORES} --outFileNamePrefix ${STAR_PREFIX}. --genomeDir ${GENOME_STAR_INDEX} --runRNGseed 1234 --outTmpDir ${STAR_TMPDIR}"
                type='string'/>
        <cvalue name='STAR_PARAMS_OUT'
                value="--outSAMtype BAM Unsorted SortedByCoordinate --limitBAMsortRAM 100000000000 --outBAMsortingThreadN=1 --outSAMstrandField intronMotif --outSAMunmapped Within KeepPairs --outFilterMultimapNmax 1 --outFilterMismatchNmax 5 --outFilterMismatchNoverLmax 0.3"
                type='string'/>
        <cvalue name='STAR_PARAMS' value="${STAR_PARAMS_BASIC} ${STAR_PARAMS_OUT} ${STAR_PARAMS_2PASS} ${STAR_PARAMS_INTRONS} ${STAR_PARAMS_CLIP} ${STAR_PARAMS_ADDITIONAL}" type='string'/>

        <!-- Metadata table for welllist. These are the defaults, but it needs to be adapted.
             for each run. So this configuration is more like a stub. It will be overriden.
        -->
        <cvalue name="Chunk"	            value="Chunk"                 tags="mandatory"
                description="This is a virtual column which is only used for chunking. It is automatically inserted and removed." />
        <cvalue name="Row"	                value="Row"                 tags="mandatory" />
        <cvalue name="Col"	                value="Col"                 tags="mandatory" />
        <cvalue name="Candidate"	        value="Candidate"	        tags="mandatory" />
        <cvalue name="For.dispense"	        value="For.dispense"	    tags="mandatory" />
        <cvalue name="Sample"	            value="Sample"	            tags="mandatory" />
        <cvalue name="Barcode"	            value="Barcode"	            tags="mandatory" />
        <cvalue name="State"	            value="State"	            tags="mandatory" />
        <cvalue name="Cells1"	            value="Cells1"	            tags="mandatory" />
        <cvalue name="Cells2"	            value="Cells2"	            tags="mandatory" />
        <cvalue name="Signal1"	            value="Signal1"	            tags="mandatory" />
        <cvalue name="Signal2"	            value="Signal2"	            tags="mandatory" />
        <cvalue name="Size1"	            value="Size1"	            tags="mandatory" />
        <cvalue name="Size2"	            value="Size2"	            tags="mandatory" />
        <cvalue name="Integ.Signal1"	    value="Integ.Signal1"	    tags="mandatory" />
        <cvalue name="Integ.Signal2"	    value="Integ.Signal2"	    tags="mandatory" />
        <cvalue name="Circularity1"	        value="Circularity1"	    tags="mandatory" />
        <cvalue name="Circularity2"	        value="Circularity2"	    tags="mandatory" />
        <cvalue name="Confidence"	        value="Confidence"	        tags="mandatory" />
        <cvalue name="Confidence1"	        value="Confidence1"	        tags="mandatory" />
        <cvalue name="Confidence2"	        value="Confidence2"	        tags="mandatory" />
        <cvalue name="Dispense.tip"	        value="Dispense.tip"	    tags="mandatory" />
        <cvalue name="Drop.index"	        value="Drop.index"	        tags="mandatory" />
        <cvalue name="Global.drop.index"	value="Global.drop.index"	tags="mandatory" />
        <cvalue name="Source.well"	        value="Source.well"	        tags="mandatory" />
        <cvalue name="Sequencing.count"	    value="Sequencing.count"	tags="mandatory" />
        <cvalue name="Image1"	            value="Image1"	            tags="mandatory" />
        <cvalue name="Image2"	            value="Image2"	            tags="mandatory" />
        
        <!--<cvalue name='metadataTableColumnIDs' value='Chunk,Row,Col,Candidate,For.dispense,Sample,Barcode,State,Cells1,Cells2,Signal1,Signal2,Size1,Size2,Integ.Signal1,Integ.Signal2,Circularity1,Circularity2,Confidence,Confidence1,Confidence2,Dispense.tip,Drop.index,Global.drop.index,Source.well,Sequencing.count,Image1,Image2' type="string" />-->

    </configurationvalues>

    <processingTools>
        <tool name="workflowEnvironment_tbiCluster_singleCell" value="tbi-cluster-scrnaseq.sh" basepath="rnaseqworkflow/environments"/>
        <tool name="extractUmi" value="extract_umi.py" basepath="rnaseqworkflow"/>
        <tool name="mergeFeaturecountsTables" value="merge_featurecounts_tables.py" basepath="rnaseqworkflow"/>
        <tool name="singleCellLibraryQc" value="run_library_qc.py" basepath="rnaseqworkflow"/>
        <tool name="fastqlinker" value="scrna_linker.sh" basepath="rnaseqworkflow">
            <resourcesets>
                <rset size="s" memory="100M" cores="1" nodes="1" walltime="1h" />
            </resourcesets>
            <input type="file" typeof="LaneFile" scriptparameter="FAKE_FILE"/>
            <input type="string" setby="callingCode" scriptparameter="READS_LEFT"/>
            <input type="string" setby="callingCode" scriptparameter="READS_RIGHT"/>
            <output type="file" typeof="TextFile" fnpatternselectiontag="checkpointLinking" scriptparameter="CHECKPOINT_LINKING" />
        </tool>
        <tool name="jemultiplexer" value="scrna_jemultiplexer.sh" basepath="rnaseqworkflow">
            <resourcesets>
                <rset size="s" memory="5g" cores="5" nodes="1" walltime="3h" queue="devel"/>
                <rset size="l" memory="15g" cores="10" nodes="1" walltime="1000h"/>
            </resourcesets>
            <input type="file" typeof="LaneFile" scriptparameter="FAKE_FILE"/>
            <input type="string" setby="callingCode" scriptparameter="READS_LEFT"/>
            <input type="string" setby="callingCode" scriptparameter="READS_RIGHT"/>
            <output type="file" typeof="TextFile" fnpatternselectiontag="checkpointDemultiplexing" scriptparameter="CHECKPOINT_DEMULTIPLEXING" />
        </tool>
        <tool name="singlecellPostprocessing" value="singlecell_postprocessing.sh" basepath="rnaseqworkflow">
            <resourcesets>
                <rset size="s" memory="1g" cores="1" nodes="1" walltime="1h"/>
            </resourcesets>
            <input type="file" typeof="TextFile" scriptparameter="CHECKPOINT_PROCESSING"/>
            <input type="string" setby="callingCode" scriptparameter="BAM_FILE_NUM"/>
            <input type="string" setby="callingCode" scriptparameter="SAMPLE"/>
            <output type="file" typeof="TextFile" fnpatternselectiontag="checkpointPostprocessing" scriptparameter="CHECKPOINT_POSTPROCESSING" />
        </tool>

    </processingTools>
    <filenames package='de.dkfz.b080.co.files' filestagesbase='de.dkfz.b080.co.files.COFileStage'>
        <filename class='TextFile' derivedFrom="LaneFile" selectiontag="checkpointLinking" pattern='${outputAnalysisBaseDirectory}/.checkpoint_linking'/>
        <filename class='TextFile' derivedFrom="LaneFile" selectiontag="checkpointDemultiplexing" pattern='${outputAnalysisBaseDirectory}/.checkpoint_demultiplexing'/>
        <filename class='TextFile' derivedFrom="TextFile" selectiontag="checkpointTrimming" pattern='${outputAnalysisBaseDirectory}/.checkpoint_trimming_${jobParameter,name="SAMPLE"}_${jobParameter,name="CHUNK_INDEX"}'/>
        <filename class='TextFile' derivedFrom="TextFile" selectiontag="checkpointProcessing" pattern='${outputAnalysisBaseDirectory}/.checkpoint_processing_${jobParameter,name="SAMPLE"}_${jobParameter,name="CHUNK_INDEX"}'/>
        <filename class='TextFile' derivedFrom="LaneFile" selectiontag="checkpointPostprocessing" pattern='${outputAnalysisBaseDirectory}/.checkpoint_postprocessing_${jobParameter,name="SAMPLE"}'/>
    </filenames>
</configuration>
